class Solution:
    def longestPalindromeSubseq(self, s: str) -> int:
        Str=s
        n = len(Str)
        r = Str[::-1]
        new =''
        
        dp = [[0 for _ in range (n+1)] for _ in range(n+1)]
        for i in range(n+1):
            dp[i][0] =0
            dp[0][i] =0
        
        for i in range(1,n+1):
            for j in range(1,n+1):
                if(Str[i-1]==r[j-1]):
                    dp[i][j] = 1+ dp[i-1][j-1]
                else:
                    dp[i][j] = max(dp[i-1][j], dp[i][j-1])
        i=n
        j=n
        while(i>0 and j>0):
            if(Str[i-1]==r[j-1]):
                new = new + r[i-1]
                i =i-1
                j=j-1
            else:
                if dp[i-1][j] >dp[i][j-1]:
                    i =i-1
                else:
                    j=j-1
        
        
        return len(new)
