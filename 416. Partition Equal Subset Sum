class Solution:
    
    def canPartition(self, nums: List[int]) -> bool:
        s= sum(nums)
        if s%2 !=0:
            return False
        else:
            l = len(nums)
            k = int(s/2)
            dp = [[False for _ in range(k+1)] for _ in range(l+1)]
            for i in range(l+1):
                dp[i][0] = True
            for i in range(1,l+1):
                for j in range(1,k+1):
                    if nums[i-1]<=j:
                        dp[i][j] = dp[i-1][j]  or dp[i-1][j-nums[i-1]]
                    else:
                        dp[i][j] = dp[i-1][j]
            return dp[-1][-1]
        
